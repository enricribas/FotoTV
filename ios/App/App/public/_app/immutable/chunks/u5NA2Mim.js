const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CwIefVjT.js","./DCj4iFuT.js"])))=>i.map(i=>d[i]);
import{_ as d,$ as l,a as o,S as p,a0 as h,v as m,H as f,k as w}from"./DCj4iFuT.js";import{_ as y}from"./D9Z9MdNV.js";var u;(function(t){t.IndexedDbLocal="INDEXED_DB_LOCAL",t.InMemory="IN_MEMORY",t.BrowserLocal="BROWSER_LOCAL",t.BrowserSession="BROWSER_SESSION"})(u||(u={}));var g;(function(t){t.APPLE="apple.com",t.FACEBOOK="facebook.com",t.GAME_CENTER="gc.apple.com",t.GITHUB="github.com",t.GOOGLE="google.com",t.MICROSOFT="microsoft.com",t.PLAY_GAMES="playgames.google.com",t.TWITTER="twitter.com",t.YAHOO="yahoo.com",t.PASSWORD="password",t.PHONE="phone"})(g||(g={}));const a=d("FirebaseAuthentication",{web:()=>y(()=>import("./CwIefVjT.js"),__vite__mapDeps([0,1]),import.meta.url).then(t=>new t.FirebaseAuthenticationWeb)}),i=l.isNativePlatform();let s=null;class b{static async initialize(){if(console.log("Initializing AuthService",{platform:l.getPlatform(),isNative:i}),i)try{console.log("Firebase Authentication plugin available for native platform")}catch(e){throw console.error("Failed to initialize Firebase Authentication plugin:",e),e}this.handleAuthStateChanges(),typeof window<"u"&&await this.completeMagicLinkSignIn()}static handleAuthStateChanges(){o.onAuthStateChanged(e=>{e?console.log("User signed in:",{uid:e.uid,email:e.email,providers:e.providerData.map(r=>r.providerId)}):console.log("User signed out")})}static async signInWithGoogle(){try{if(console.log("Starting Google Sign-In",{isNative:i,platform:l.getPlatform(),userAgent:typeof navigator<"u"?navigator.userAgent.substring(0,100):"unknown"}),i){console.log("Attempting native Google Sign-In with Capacitor Firebase plugin");try{console.log("Calling FirebaseAuthentication.signInWithGoogle()...");const e=await a.signInWithGoogle();if(console.log("Plugin raw result:",e),console.log("Plugin result details:",{hasUser:!!e?.user,hasCredential:!!e?.credential,userId:e?.user?.uid,email:e?.user?.email}),e?.user){console.log("Google Sign-In successful via plugin:",e.user.uid);let r=0;for(;r<10&&!o.currentUser;)await new Promise(n=>setTimeout(n,500)),r++,console.log(`Waiting for Firebase Auth sync, attempt ${r}`);return console.log("Final Firebase Auth state:",{hasCurrentUser:!!o.currentUser,currentUserUid:o.currentUser?.uid,syncAttempts:r}),o.currentUser}else return console.log("Plugin returned no user - likely cancelled by user"),null}catch(e){console.error("Capacitor Firebase plugin failed:",e);const r=e;throw console.error("Plugin error details:",{code:r.code,message:r.message,name:r.name}),r.code==="auth/api-not-available"?new Error("Google Play Services not available. Please ensure Google Play Services is installed and updated."):r.code==="auth/network-request-failed"?new Error("Network error. Please check your internet connection and try again."):r.message?.includes("DEVELOPER_ERROR")||r.message?.includes("Invalid configuration")?new Error(`Authentication configuration error. Please check that:
1. The package name in google-services.json matches com.phototv.app
2. SHA certificates are added to Firebase Console
3. Google Play signing certificates are included for production builds`):new Error(`Native authentication failed: ${r.message||"Unknown error"}. Check Firebase configuration.`)}}else{console.log("Starting Google Sign-In (web)");const e=await p(o,h);return console.log("Google Sign-In successful:",e.user.uid),e.user}}catch(e){const r=e;if(console.error("Google Sign-In Error:",r),r.code==="auth/popup-closed-by-user")return console.log("Sign-in popup was closed by user"),null;throw r.code==="auth/popup-blocked"?(console.log("Sign-in popup was blocked by browser"),new Error("Popup was blocked. Please allow popups and try again.")):r.code==="auth/network-request-failed"?new Error("Network error. Please check your internet connection and try again."):e}}static async sendMagicLink(e){const r={url:"https://fototv-90cf0.firebaseapp.com/__/auth/action",handleCodeInApp:!0,android:{packageName:"com.phototv.app",installApp:!1,minimumVersion:"1"}};try{await m(o,e,r),s=e,console.log("Magic link sent to:",e)}catch(n){throw console.error("Magic Link Error:",n),n}}static async completeMagicLinkSignIn(e){const r=e||(typeof window<"u"?window.location.href:"");if(!this.isEmailLink(r))return null;try{let n=s;if(!n&&typeof window<"u"&&(n=window.prompt("Please provide your email for confirmation")),!n)throw new Error("Email is required to complete sign in");const c=await f(o,n,r);return s=null,console.log("Magic link sign-in successful:",c.user.uid),c.user}catch(n){throw console.error("Magic Link Completion Error:",n),n}}static isEmailLink(e){return w(o,e)}static getCurrentUser(){return o.currentUser}static async getCurrentUserAsync(){return new Promise(e=>{const r=o.onAuthStateChanged(n=>{r(),e(n)})})}static isSignedIn(){return!!o.currentUser}static async signOut(){try{if(i)try{await a.signOut()}catch(e){console.warn("Plugin sign out failed, continuing with Firebase auth sign out:",e)}await o.signOut(),s=null,console.log("Successfully signed out")}catch(e){throw console.error("Sign Out Error:",e),e}}static async getAuthToken(){try{const e=o.currentUser;return e?await e.getIdToken():null}catch(e){return console.error("Error getting auth token:",e),null}}static async refreshAuthToken(){try{const e=o.currentUser;return e?await e.getIdToken(!0):null}catch(e){return console.error("Error refreshing auth token:",e),null}}static async testPluginAvailability(){if(!i)return{available:!1,reason:"Not on native platform"};try{const e=await a.getCurrentUser();return{available:!0,currentUser:e.user?{uid:e.user.uid,email:e.user.email}:null}}catch(e){const r=e;return{available:!1,error:r.message,code:r.code}}}static getDebugInfo(){return{platform:{capacitor:l.getPlatform(),native:i,userAgent:typeof navigator<"u"?navigator.userAgent.substring(0,100):"unknown"},firebase:{projectId:o.app.options.projectId,authDomain:o.app.options.authDomain,hasCurrentUser:!!o.currentUser,currentUser:o.currentUser?{uid:o.currentUser.uid,email:o.currentUser.email,isAnonymous:o.currentUser.isAnonymous,providers:o.currentUser.providerData.map(e=>e.providerId)}:null},plugin:{available:!!a,methods:a?Object.getOwnPropertyNames(a):[]},storage:{hasWindow:typeof window<"u",hasLocalStorage:typeof window<"u"&&!!window.localStorage,emailStored:i?!!s:typeof window<"u"&&!!localStorage.getItem("emailForSignIn")},environment:{dev:!1,mode:"production",hasFirebaseKeys:!0}}}}typeof window<"u"&&b.initialize().catch(console.error);export{b as A,a as F,g as P,u as a};
